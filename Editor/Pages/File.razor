@page "/file"
@using PeakSWC.Configuration
@using System.Text;

@inject IJSRuntime JSRuntime
@inject MemoryConfigurationSerializer  Serializer
<!--

https://morioh.com/p/96f05aad50c3
    https://github.com/sample-by-jsakamoto/Blazor-DownloadFIles/blob/master/Client/wwwroot/script/helper.js
    -->
<h1>File</h1>

<button @onclick="DownloadText">Download configuration file</button>
<p>
    <InputFile OnChange="@OnInputFileChange" />
</p>

@code {
    private async Task OnInputFileChange(InputFileChangeEventArgs e)
    {
        var buffer = new byte[e.File.Size];
        await e.File.OpenReadStream().ReadAsync(buffer);

        // Reset the serialzer
        Serializer.data = Encoding.UTF8.GetString(buffer, 0, buffer.Length);
        Serializer.Roots = null;
    }
    async Task DownloadText()
    {
        //await PeakSWC.ExampleJsInterop.Prompt(JSRuntime, "Download file");
        // Generate a text file
        byte[] file = System.Text.Encoding.UTF8.GetBytes(Serializer.data);

        // TODO use C# method
        await JSRuntime.InvokeVoidAsync("exampleJsFunctions.saveFile", "configuration.json", file, "text/json");
    }
}